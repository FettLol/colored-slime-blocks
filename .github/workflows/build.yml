name: build
on: [pull_request, push]

jobs:
  # Make sure the Gradle Wrapper validates.
  validate-gradle:
    name: "Validate Gradle Wrapper"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: gradle/actions/wrapper-validation@v5

  # Build artifacts and store them.
  build:
    name: "Build"
    strategy:
      matrix:
        java: [21]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup JDK ${{ matrix.java }}
        uses: actions/setup-java@v5
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Cache Gradle Wrapper
        uses: actions/cache@v4
        with:
          path: ~/.gradle/wrapper
          key: gradle-wrapper-${{ runner.os }}-${{ hashFiles('gradle/wrapper/**/*') }}
          restore-keys: gradle-wrapper-${{ runner.os }}-

      - name: Cache packages
        id: cache-packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: gradle-packages-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-packages-${{ runner.os }}-

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew build --stacktrace --no-daemon

      - name: Cleanup Gradle Cache
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: |
          rm -f  $HOME/.gradle/caches/*/*.lock
          rm -rf $HOME/.gradle/caches/*/plugin-resolution/
          rm -rf $HOME/.gradle/caches/*/scripts/
          rm -rf $HOME/.gradle/caches/*/scripts-remapped/
          rm -rf $HOME/.gradle/caches/*/fileHashes/
          rm -f  $HOME/.gradle/caches/journal-1/file-access.bin

      - name: Setting mod version
        run: |
          cat $GITHUB_WORKSPACE/gradle.properties | grep "^archives_base_name =" | sed 's/ //g' >> $GITHUB_ENV
          cat $GITHUB_WORKSPACE/gradle.properties | grep "^minecraft_version =" | sed 's/ //g' >> $GITHUB_ENV
          cat $GITHUB_WORKSPACE/gradle.properties | grep "^mod_version =" | sed 's/ //g' >> $GITHUB_ENV

      - name: Create package name
        run: echo "package_name=[${{ env.minecraft_version }}] ${{ env.archives_base_name }}-${{ env.mod_version }}.${{ github.run_number }}" >> $GITHUB_ENV

      - name: Capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.package_name }}
          path: build/libs/
